nmik
nix develop
nix develop -c $SHELL
env
nix develop -c SHELL
ls
nix develop -c SHELL
nix develop --help
PATH
ls
,s
setxkbmap fr-workman-p -option caps:swapescape
ls
cd .config
ls
cd nushell/
print "test"
nvim functions.nu
fix-kbd 
print test
print sel els
print "test test "
set-screen
cd .config
cd nvim/
nvim
nvim
cd .config
cd nvim
cd internals/
ls
cd seed_ecs/src/
ls
cd utils/
lt
ls
touch svec.rs
touch rawvec.rs
nvim
cd nvim
z .config/nvim
ls
cd lua
ls
bat netrw.lua
rm netrw.lua
ls
ls tele
bat tele.lua
rm -rf tele/
ls
ls utils/
ls first_load.lua
bat first_load.lua
ls
bat options.lua
ls
cd keymaps/
ls
cd ..
ls
bat commands.lua
rm commands.lua
ls utils/
ls
ls languages/
ls languages/settings/
ls
ls keymaps/
ls
nvim
cd lua/
ls
cd keymaps/
nvim splits.lua
nvim
nvim splits.lua
nvim
nvim splits.lua
nvim
nvim splits.lua
carg 
cargo c
cargo r
fix-kbd 
cargo c
nvim
nix develop -c $env.SHELL
 nvim
LS
ls
cd Documents/
ls
cd nix-machine/
ls
whoami
ls users/
rm -r users/AdrienDML/
nixos-rebuild 
nixos-rebuild build
nixos-rebuild build --flake .#
nixos-rebuild build --flake .# --impure
nixos-rebuild build --impure --flake .# 
cd .config
cd nushell/
nixDev 
z seed_rs
ls
nixDev 
ls
nixDev 
ls
$env.SELL
source
z seed_rs
ls
nixDev 
set-screen "left"
set-screen "right"
nvim
ls
nvim functions.nu
ls
z acid
ls
cd TD/
ls
bat flake.nix
nvim functions.nu
nixos-rebuild build --impure --flake .# 
nixos-rebuild build --impure --flake .# --show-trace
nixos-rebuild build --impure --show-trace --flake .#
nixos-rebuild build --impure --show-trace --flake .# > test.txt
nixos-rebuild build --impure --show-trace --flake .# | save test.txt
ls
nixos-rebuild build --impure --show-trace --flake .# | complete
home-manager switch --flake .#
bluetoothctl 
home-manager build --flake .#
z dev
ls
mkcd nix
ls
mkdir nnvim
cd nnvim/
ls
touch Readme.md
z nvim
rm init.vim
nvim Readme.md
nvim
home-manager build --flake .#
nix-channel --list
home-manager build --flake .#
nixos-rebuild build --impure --flake .#
ls
mv hardware/ machines/.
ls
ls machines/
mkdir machines/configs
mkdir machines/configs -p
rm machines/configs
mkdir machines/configs
cp machines/hardware/nixos-pc.nix machines/configs/.
ls
nixos-rebuild build --impure --flake .#
home-manager build --flake .#
systemctl suspend
ls
home-manager build --flake .#
nixos-rebuild build --flake .#
ls machines/
ls machines/hardware/
nixos-rebuild build --flake .#
nixos-rebuild build --impure --flake .#
z nushell
ls
nvim functions.nu
nixos-rebuild build --impure --flake .#
 t!!
nixos-rebuild build --impure --flake .#
ls
cd modules/
ls
cd system/
ls
rm -r bluetooth/
nixos-rebuild build --impure --flake .#
git merge --strategy=ours --no-commit master
ls
git commit
ls
gs
git s
git status
nvim
ls
ls lib
bat lib/mkComputer.nix
git checkout master
ls
ls hardware/
git reset --hard old-config
ls
git push -f origin main
git commit
git push -f
ls
nixos-rebuild build --impure --flake .#
ls
nixos-rebuild build --flake .#
nixos-rebuild build --show-trace --flake .# 
z rust
git clone https://github.com/GraphiteEditor/Graphite.git
cd Graphite/
ls
touch flake.nix
nvim
rm flake.nix
ls
ls frontend/
ls frontend/src/
bat frontend/src/App.vue
cd frontend/src/components/widgets/
ls
ls groups/
ls assists/
bat inputs/ColorInput.vue
ls
bat inputs/ColorInput.vue
up
cd floating-menus/
ls
nvim ColorPicker.vue
up 4
ls
up
rm -rf Graphite/
git clone git@github.com:AdrienDML/Graphite.git
git branch color-picker-improvement
cd Graphite/
git branch color-picker-improvement
git checkout color-picker-improvement
ls
nixos-rebuild build --show-trace --flake .# 
nixos-rebuild build --flake .#
nixos-rebuild build --flake .# | tail
nixos-rebuild build --show-trace --flake .# | tail 20
bash
nixos-rebuild build --show-trace --flake .# | tail 20
nixos-rebuild build --show-trace --flake .#
nixos-rebuild build --flake .#
git status
nixos-rebuild build --flake .#
ls
mv ReadMe.md README
mv README README.md
gs
git status
git add README.md
git status
git add README
git status
nixos-rebuild build --flake .#
nixos-rebuild build --show-trace --flake .#
 nixos-rebuild 
 nixos-rebuild build 
 nixos-rebuild build --flake .#
 nixos-rebuild build --show-trace --flake .#
t  nixos-rebuild build --show-trace --flake .#
nixos-rebuild build --show-trace --flake .#
nixos-rebuild build --flake .#
nixos-rebuild build --show-trace --flake .#
nixos-rebuild build --flake .#
z rust 
z seed_rs
ls
ls src
ls src/bin/
 ls src/bin/seeding/
ls
ls internals/
ls internals/seed_math/
ls internals/seed_math/src/
cd internals/
ls
cd seed_ecs/
ls
ls src/
nvim
nixDev
ls
cd ..
ls
cd  wgpu_test/
ls
nvim flake.nix
touch Cargo.toml
nvim Cargo.toml
rm Cargo.toml
nixDev
touch Cargo.toml
nixDev
cd ..
ls
cd shade/
ls
cd ..
ls
mkdir test 
cd test 
cp ../../../fac/M1/ACID/TD/flake.nix .
nvim flake.nix
nixDev
z rust
rm test -rf
ls
git clone git@github.com:AdrienDML/test.git
cd test
cargo r
cargo --version
cargo run
cargo b
cargo build
cargo r
cargo c
cargo r
cargo c
cargo r
cargo c
nixos-rebuild build --flake .#
cargo r
nvim
z nvim
ls
nvim ini
ls
nvim init.lua
nixDev
nvim
systemctl reboot
z nix-machine
nixos-rebuild boot --flake .#
sudo nixos-rebuild boot --flake .#
systemctl reboot
startx
z nix-machine
cd modules/system/
ls
mkdir lightdm
ls
touch lightdm/default.nix
nixos-rebuild build --flake .#
nix log /nix/store/7n01l9kbqc4kxzz3a5hx2prhjjgk52wm-xkb-validated.drv
nixos-rebuild build --flake .#
nix log /nix/store/d886djfvn1644kgiwa7kzm5y77jvfz20-xkb-validated.drv
nixos-rebuild build --flake .#
ls /usr
ls /usr/bin/
ls /etc/X11/xorg.conf.d/
ls /etc/X11/
ls /etc/X11/xorg.conf.d/00-keyboard.conf
bat /etc/X11/xorg.conf.d/00-keyboard.conf
printenv
clear
setxkbmap -print
ls
mv workman/ keyboard
ls
nixos-rebuild build --flake .#
sudo nixos-rebuild boot --flake .#
fix-kbd 
setxkbmap fr-workman-p -option caps:swapescape
setxkbmap workman-p -option caps:swapescape
z nix-machine
ls
sudo nixos-rebuild switch --flake .#
nvim
sudo nixos-rebuild switch --flake .#
systemctl reboot
fix-kbd 
ls
setxkbmap fr-workman-p -option caps:swapescape
setxkbmap fr(workman-p) -option caps:swapescape
z nix-machine
ip
ip adrr
ip help
ip route
ip address
clear
ping google.com
setxkbmap -option caps:swapescape
ip address
lspci -k
nix-shell -p lspci
nixos-rebuild build --flake .#
sudo nixos-rebuild boot --flake .#
systemctl reboot
z nix-machine
ls
setxkbmap -option caps:swapescape
sudo nixos-rebuild switch --flake .#
ip address
systemctl reboot
rfkill
nixshell -p pciutils
nix-shell -p pciutils
setxkbmap -option caps:swapescape
z nix
ls
sudo lsmod
sudo lsmod | rg wifi
systemctl help
systemctl --help
systemctl lis-units
systemctl list-units
systemctl list-services
systemctl list-units | rg service
systemctl list-services
systemctl list-units
rfkill
ip address
dmesg
dmesg | rg wifi
lspci -k
nix-shell -p pciutils
nvim
systemctl shutdown
systemctl poweroff
ping google.com
ip address
ls
z nix
ls
setxkbmap -option caps:swapescape
nixos-rebuild build --flake .#
&&
nixos-rebuild build --flake .#
nixos-rebuild switch --flake .#
sudo nixos-rebuild switch --flake .#
ip address
sudo nixos-rebuild switch --flake .#
ip address
dmesg | rg wifi
ip address
fix-kbd 
nixos-rebuild build --flake .#
sudo nixos-rebuild boot --flake .#
nvim
systemctl reboot
ls
z nix
setxkbmap -option caps:swapescape
nixshell -p pciutils
nixos-rebuild build --flake .#
sudo nixos-rebuild boot --flake .#
systemctl reboot
setxkbmap fr-workman-p -option caps:swapescape
setxkbmap -option caps:swapescape
ls
systemctl poweroff
ls
z M1
cd POOSM1/
l
ls
cd TD
ls
nixDev
blueman
bluetoothctl 
ls
cz TD1
cd TD1/
ls
gradle run
gradle run --info
gradle run --debug
ls
touch src
ls
rm src
ls
mkdir src
ls
mv *.java src/.
setxkbmap -option caps:swapescape
ls
cd src
mkdir main
mv *.java main/.
ls
cd ..
ls
mkdir src/main/java/
setxkbmap fr-workman-p -option caps:swapescape
setxkbmap fr-workman-p
ls /etc/X11/
ls /etc/X11
ls /etc/
ls /etc/kbd/
ls /etc/kbd/keymaps/
ls /etc/kbd/keymaps/include/
ls /etc/kbd/keymaps/
ls /etc/kbd/unimaps/
ls /etc/kbd/
ls /etc/
z nix-machine/
nvim
ls
cd ..
nixos-rebuild build --flake .#
sudo nixos-rebuild switch --flake .#
nvim
ls
setxkbmap fr-workman-p
z nix-machine
ls
home-manager swich --flake .#
home-manager switch --flake .#
ls
setxkbmap fr-workman-p
cd modules/system/keyboard/
ls
mv fr-workman-p.xkb workman-p.xkb
setxkbmap -option caps:swapescape
ls
nixos-rebuild build --flake .#
nixos-rebuild switch --flake .#
sudo nixos-rebuild switch --flake .#
w M1
z M1
ls 
cd POOSM1/
cd TD/
setxkbmap fr(workman-p) -option caps:swapescape
setxkbmap fr -option caps:swapescape
setxkbmap --help
setxkbmap
setxkbmap help
man setxkbmap
setxkbmap fr -variant workman-p -option caps:swapescape
man setxkbmap
setxkbmap fr -layou workman-p -option caps:swapescape
setxkbmap fr -layout workman-p -option caps:swapescape
setxkbmap -layout workman-p -option caps:swapescape
setxkbmap fr -layout workman-p -option caps:swapescape
man setxkbmap
setxkbmap fr -layout workman-p -option caps:swapescape -verbose
ls
z nix
ls
setxkbmap -option caps:swapescape
setxkbmap workman-p -option caps:swapescape
setxkbmap fr(workman-p) -option caps:swapescape
setxkbmap workman-p(workman-p) -option caps:swapescape
setxkbmap fr(nodeadkeys) -option caps:swapescape
z nvim
rm init.vim
nvim
z M1
cd ACID/TD/
ls
code .
nixDev 
z ACID
cd TD/
ls
code .
nixDev 
z ACID
cd TD/
jupyter-notebook 
nixDev 
setxkbmap us(wokman) -option caps:swapescape
setxkbmap us -layout workman -option caps:swapescape
setxkbmap us -layout workman-p -option caps:swapescape
setxkbmap -layout workman-p -option caps:swapescape
setxkbmap workman-p -option caps:swapescape
setxkbmap workman-p
setxkbmap us(workman-p)
setxkbmap us(workman-p) -v
setxkbmap fr
setxkbmap --help
setxkbmap -help
setxkbmap us -layout Workman-P
setxkbmap us -keymap Workman-P
setxkbmap us -keymap workman-p
setxkbmap -keymap workman-p
setxkbmap -keymap us(workman-p)
cd modules/system/keyboard/
ls
nixshell -p xkbcomp
nix6shell -p xkbcomp
nix-shell -p xkbcomp
nix-shell -p xorg.xkbcomp
setxkbmap -layout fr -keymap workman-p
setxkbmap -layout fr -variant workman-p
setxkbmap -layout us -variant workman-p
setxkbmap -layout us -variant workman
z nvim
nciv
nvim
nvic
nvim
nixos-rebuild build --flake .#
setxkbmap -layout workman-p -variant workman-p
nixos-rebuild build --flake .#
sudo nixos-rebuild switmh --flake .#
sudo nixos-rebuild switch --flake .#
setxkbmap -layout us -variant workman
z nix
ls
setxkbmap -layout us -variant workman -option caps:swapescape
nixos-rebuild build --flake .#
sudo nixos-rebuild switch --flake .#
systemctl reboot
setxkbmap -layout us -variant workman -option caps:swapescape
setxkbmap -layout fr -variant workman-p -option caps:swapescape
z nix
ls
setxkbmap -layout fr -variant workman-p -option caps:swapescape
ls
md
cd
ls
la
ls -a
bat .xsession
loginmtl 
loginctl 
loginctl  show-session 2 -p Type
bat .xprofile
bat .profile
ls
ls -a
z nushell
ls
nvim fun
z nushell
nciv
la
ls
la
md
cd
la
nvim 
md
cd
la
ls -l
z nushell
ls
la
ll
nvim 
z nvim
nv
z nvim
touch lua/dashboard.lua
cd lua
ls
cd keymaps/
ls
touch telescope.lua
nv
ls
cd
cd -
up
s
l
ls
rm dashboard.lua
nv
nc
nv
ls
rm languages/settings/neorg.lua
nv
z nciv
z nvim
nv
nc
nv
z nushell
gs
nv
md
cd
ls
z rust
ls
cd seed_rs/
ls
nv
cargo m
cargo mc
cargo c
cargo r
cargo t
z rust
cd ..
ls
up
ls
cd dev
ls
cd web/
ls
ls adriendml/
cd adriendml/
ls
ls back
ls front/
ls
z nix
ls
nv
z nushell
nvim
z nix
ls
xkbcomp
home-manager switch --flake .#
xkbcomp 
cd modules/system/keyboard/
ls
xkbcomp workman-p.xkb $env.DISPLAY
xkbcomp workman-p.xkb $DISPLAY
$env.DISPLAY
xkbcomp workman-p.xkb
ls
xkbcomp workman-p.xkb out
ls
rm result/
ls
xkbcomp workman-p.xkb out
xkbcomp workman-p.xkb -o out.xkm
ls
xkbcomp workman-p.xkb -o out.xkm -c
xkbcomp workman-p.xkb -o out.xkm -C
sl
ls
xkbcomp workman-p.xkb -C
ls
xkbcomp workman-p.xkb $out
xkbcomp workman-p.xkb kbl
ls
xkbcomp -h
xkbcomp workman-p.xkb test
xkbcomp -xkm workman-p.xkb test
xkbcomp -xkm workman-p.xkb
ls
xkbcomp -xkm workman-p.xkb out
xkbcomp -w !) workman-p.xkb out
xkbcomp -w 10 workman-p.xkb out
bash
setxkbmap -layout us -variant workman -option caps:swapescape
z rust
ls
cd Game/
ls
ls assets
ls crates/
ls
ls crates/bevy_ext/
ls crates/bevy_ext/src/
bat crates/bevy_ext/src/shape.rs
ls
cd ..
ls
cd StarConqueror/
ls
ls src/
ls
ls src/
bat src/lib.rs
cd 
cd -
ls
cd ..
git clone git@github.com:AdrienDML/StarConquer.git
cd StarConquer/
cp ../StarConqueror/Cargo.toml .
ls
touch src/lib.rs
ls
ls src/
nv Cargo.toml
nixDev 
rm Cargo.lock
nixDev 
git
gs
git rm Cargo.toml
ls
nixDem
nixDev
ls
gs
git add Cargo.toml
gs
ls
touch Cargo.lock
nixDev
nix-shell -p rustu
nix-shell -p rustup
nixDev 
nixDev --impure
z nushell
nv
nix develop -c $env.SHELL --impure
nix develop -c $env.SHELL --impur
let-env NIXPKGS_ALLOW_UNFREE=1; nix decelop -c $env.SHELL -impure
let-env NIXPKGS_ALLOW_UNFREE = 1; nix decelop -c $env.SHELL -impure
let-env NIXPKGS_ALLOW_UNFREE = 1; nix develop -c $env.SHELL -impure
let-env NIXPKGS_ALLOW_UNFREE = 1; nix decelop -c $env.SHELL --impure
let-env NIXPKGS_ALLOW_UNFREE = 1; nix develop -c $env.SHELL --impure
let-env NIXPKGS_ALLOW_UNFREE = 1
let-env NIXPKGS_ALLOW_UNFREE = 1; nix develop -c $env.SHELL --impure
enc
env.NIXPKGS_ALLOW_UNFREE
$env.NIXPKGS_ALLOW_UNFREE
nix develop -c $env.SHELL --impure
nix-shell
nv Cargo.toml
cd ..
rm StarConquer/ -rf
git clone git@github.com:AdrienDML/StarConquer.git
ls
cd StarConquer/
ls
bat ../StarConqueror/Cargo.toml
nv ../StarConquer/Cargo.toml
nv ../StarConqueror/Cargo.toml
nv Cargo.toml
nixDev --impure
nix develop -c $env.SHELL --impure
let-env NIXPKGS_ALLOW_UNFREE = 1; nix develop -c $env.SHELL --impure
env.NIXPKGS_ALLOW_UNFREE
$env.NIXPKGS_ALLOW_UNFREE
let-env NIXPKGS_ALLOW_UNFREE = true; nix develop -c $env.SHELL --impure
nix-shell
nix develop -c $env.SHELL --impure
bash
z nushell
nv
cargo r
touch src/lib.rs
ls
cargo r
nv
nv ../StarConqueror/Cargo.toml
nv
nv ../StarConqueror/Cargo.toml
nv
nv ../StarConqueror/Cargo.toml
cargo r
pkg-config
cargo b
nv
nix develop --impure -c $env.SHELL 
nixDevi
z rust
cd StarConquer/
cargo b
cargo r
ls
cd src/
ls
mkdir planet
touch planet/mod.rs
z nvim
nv
exti
nv
z nvim
cd -
nv
nv
11
nv
cargo r
11
cargo r
cd src/
ls
cd planet/
touch hexasphere.rs
up 2
cargo r
ls
cargo c
nv
cargo c
cargo b
cargo r
11
cargo r
11
cargo r
ls
cargo r
gs
ga 
git add -A
gs
gcm "Working icosahedron subdivision"
git push
gs
git add -A
gcm "Update TodoList"
git push
git add -A
gcm "Update TodoList"
git push
git add -A
gcm "Update TodoList"
git push
git add -A
gcm "Update TodoList"
git push
ls
ls src/
cd src
ls
cd planet/
ls
touch tile.rs
ls
up 
ls
mkdir assets
ls
mv assets/ ..
ls
up
ls
cd assets
ls
mv `rust-adventure bevy-examples 91051a886ced42f4d4cb893eb7be7b5faaf822d8 libs-bevy_shader_utils_shaders/*` .
ls
rm `rust-adventure bevy-examples 91051a886ced42f4d4cb893eb7be7b5faaf822d8 libs-bevy_shader_utils_shaders/`
ls
cd ..
ls
cargo r
cargo c
cargo r
tokei
ls src/88
ls src/**
ls src/**/*
ls src/**/* | each { open }
ls src/**/* | get name | each { open }
ls src/**/* | where type=file | get name | each { open }
ls src/**/* | where type=file 
ls src/**/* | where type = file 
ls src/**/* | where type == file 
ls src/**/* | where type == file | open
ls src/**/* | where type == file | each { open | lines | lenght }
ls src/**/* | where type == file | each |it| { open $it | lines | lenght }
ls src/**/* | where type == file | each {|it| open $it | lines | lenght }
ls src/**/* | where type == file | get name | each { |it| open $it | lines | lenght }
ls src/**/* | where type == file | get name | each { |it| open $it | lines }
ls src/**/* | where type == file | get name | each { |it| open $it | lines | count}
ls src/**/* | where type == file | get name | each { |it| open $it | lines | length }
ls src/**/* | where type == file | get name | each { |it| open $it | lines | length } | sum
ls src/**/* | where type == file | get name | each { |it| open $it | lines | length }
ls src/**/* | where type == file | get name | each { |it| open $it | lines | length } | list
ls src/**/* | where type == file | get name | each { |it| open $it | lines | length } | reduce {|a, b| $a + $b}
z nushell
def loc[p: path] {<\n>ls $p + /**/* | where type == file | get name | eamh {|it| open $it | lines | length } | reduce +<\n>}
def loc [p: path] {<\n>ls $p + /**/* | where type == file | get name | eamh {|it| open $it | lines | length } | reduce +<\n>}
def loc [p: path] {<\n>ls ($p + /**/*) | where type == file | get name | eamh {|it| open $it | lines | length } | reduce +<\n>}
def loc [p: path] {<\n>ls ($p + /**/*) | where type == file | get name | eamh {|it| open $it | lines | length } | reduce {|a, b| $a + $b}<\n>}
loc src
def loc [p: path] {<\n>ls ($p + /**/*) | where type == file | get name | each {|it| open $it | lines | length } | reduce {|a, b| $a + $b}<\n>}
loc src
nvim
ls
loc .config
z nushell
loc
loc .
ls
open history.txt | lines | count
open history.txt | lines | lenght
open history.txt | lines | length
loc src
cargo b
ls
cd src/
ls
mkdir game
touch game/mod.rs
z nushell
mkmod test
ls
ls test
rm test
rm -r test
ls
nv
ext
ls
cd src
ls
mkmod
mv planet game/.
mv lib game/mod.rs
mv lib.rs game/mod.rs
touch lib.rs
ls
mkmod ext
ls
cd ext
ls
mkmod picker
 cargo m
 cargo c
cargo c
cargo r
cargo c
cargo r
ls
z acid
ls
cd TD
ls
touch td03.ipynb
code .
nixDev
nv flake.nix
code .
ls
bat td02.ipynb
code .
nixDev
nixDevi
z poo
ls
cd TD/
ls
gradle run
ls
la
ls -a
nv
la
cd TD
cd TD1/
ls
gradle run
bat build.gradle
ls
ls src/
ls src/main/
gradle run
gradle run --info
nv
cd ..
mv TD1/src/ .
ls
ls TD1/
rm -r TD1/
ls
gradle init --type java-application
ls
bat gradle
bat settings.gradle
gradle run
ls src/main/java/
ls
ls src/
ls src/main/
ls src/main/java/
rmdir src/main/java/
mv src/main/* app/src/main/java/TD/.
rm -r src/
ls
cd app/
ls
cd src/main/java/
ls
cd TD
ls
up 3
up 2
gradle run
gradle
gradle build
gradle run
clear
gradle build
nvim -c 
nvim -h
z nvim
nv
rm init.vim
jdtls
bat flake.nix
jdt-language-server 
clear
gradle build
gradle run
gradle build
gradle b
gradle r
gradle r --stacktrace
clear
gradle r --info
gradle r 
gradle r
gradle r --debuy
gradle r --debug
gradle r
ls
bat flake.nix
nv
nixDev
nv flake.nix
nixDev
nixDevi
let-env NIXPKGS_ALLOW_UNFREE = true; nix develop -c $env.SHELL --impure
nixDevi
let-env NIXPKGS_ALLOW_UNFREE = true; nix develop -c $env.SHELL --impure
bash
let-env NIXPKGS_ALLOW_UNFREE = true; nix develop --impure -c $env.SHELL
let-env NIXPKGS_ALLOW_UNFREE = !; nix develop --impure -c $env.SHELL
let-env NIXPKGS_ALLOW_UNFREE = 1; nix develop --impure -c $env.SHELL
nv flake.nix
gradle r
let-env NIXPKGS_ALLOW_UNFREE = 1; nix develop --impure -c $env.SHELL
nv flake.nix
let-env NIXPKGS_ALLOW_UNFREE = 1; nix develop --impure -c $env.SHELL
nv flake.nix
let-env NIXPKGS_ALLOW_UNFREE = 1; nix develop --impure -c $env.SHELL
nv flake.nix
let-env NIXPKGS_ALLOW_UNFREE = 1; nix develop --impure -c $env.SHELL
nv flake.nix
let-env NIXPKGS_ALLOW_UNFREE = 1; nix develop --impure -c $env.SHELL
nv flake.nix
let-env NIXPKGS_ALLOW_UNFREE = 1; nix develop --impure -c $env.SHELL
nv flake.nix
gradle r
bash
gradle run
nv
let-env NIXPKGS_ALLOW_UNFREE = 1; nix develop --impure -c $env.SHELL
ls .config/
ls .config/dconf/
ls .config/dconf/user
bat .config/dconf/user
ls .config
ls .config/gnome-session/
ls .config/gnome-session/saved-session/
find
find eduroam
find help
find -h
ls -helpp
ls -help
ls -h
ls /etc/**/* | find eduroam
ls /etc/**/* | find wpa
ls
,s
setxkbmap -layout us -variant workman -option caps:swapescape
ls
z poo
ls
cd TD
ls
bat flake.nix
nvim flake.nix
nixDevi
nvim flake.nix
gradle run
gradle run --scan
gradle run
 gradle run
gradle run
cargo r
gradle r
setxkbmap -layout us -variant workman -option caps:swapescape
z fac
os
ls
cd L3/
ls
ls progsys/
ls progsys/TP1
cd ..
ls
cd ..
ls
cd oldHome/
ls
cd ..
ls
cd Perso/
ls
cd ..
ls
ls oldHome/
ls
up
ls
cd oldnix/
ls
ls Documents/
ls Documents/documents/
ls Documents/nix
ls Documents/
up
ls
ls lost+found/
ls Downloads/
z nix
ls
nvim flake.nix
nvim 
code .
nixDevi
ls
z rust
ls
cd seed_rs/
nvim 
nixDevi
up
ls
ls seed_rs/
cd StarConquer/
cargo r
ls
nv Cargo.toml
nixDevi
z fac
ls
cd M1
ls
cd POOSM1/
ls
cd TD/
ls
gradle r
ls
ip addr
ls
setxkbmap -layout us -variant workman -option caps:swapescape
ls
python
ls
cd nushell
z nushell
ls
ping archwiki.com
ping google.com
ls
ip addr
ping google.com
z rust
ls
cd StarConquer/
ls
z nix
gs
git status
git add users/adml/home.nix
gs
git diff modules/system/keyboard/workman-p.xkb
gcm "Install steam"
home-manager switch --flake .#
git add users/adml/home.nix
gcm "Add steam to non free pkgs"
home-manager switch --flake .#
gs 
ga users/adml/
ga users/adml/home.nix
git add users/adml/home.nix
gcm "Add steam to non free pkgs try2"
git push
nv
steam
cargo r
ls
cargo r
setxkbmap -layout us -variant workman -option caps:swapescape
setxkbmap -layout us -variant workman-p -option caps:swapescape
exi
ls
cargo b
cargo run
cargo r
cargo run
cargo c
cargo r
git status
ga src/game/*
git add src/game/*
git status
git add README.md
git add src/lib.rs src/main.rs
ls
git status
git add src/planet/*
git add src/planet/
git add src/planet/hexasphere.rs
git add srm/planet/hexasphere.rs
git add src/planet/hexasphere.rs
git add -u
gs
gcm "Implemented tile generation. To fix make them show."
git push
nix run
cargo r
cd src/
ls
cd ext/
ls
mkmod camera
cargo r
cargo c
cargo m
cargo c
cargo r
cargo run
cargo r
 cargo r
cargor 
cargo r 
cargo r
 cargo r
cargo r
setxkbmap -layout us -variant workman-p -option caps:swapescape
setxkbmap -layout us -variant workman -option caps:swapescape
cargo c
cargo r
ls
cd src/
ls
cd ext/
ls
cd camera/
ls
touch settings.rs
touch systems.rs
touch components.rs
touch events.rs
setxkbmap -layout us -variant workman -option caps:swapescape
eexit
setxkbmap -layout us -variant workman -option caps:swapescape
up
ls
touch ui.rs
rm ui.rs
mkmod ui
setxkbmap -layout us -variant workman -option caps:swapescape
hx
cd nix
z nix
nvim
home-manager switch --flake .#
hx
hx --health
z .config
ls
z helix/
ls
touch config.toml
hx config.toml
hx -c config.toml
hx --config config.toml
hx
hx config.toml
z nix
ls
hx flake.nix
z helix
ls
touch languages.toml
hx languages.toml
rm languages.toml
ls
z nix
nv
hx
nixDevi
z nix
hx 
ls
home-manager switch --flake .#
hx flake.nix
home-manager switch --flake .#
hx flake.nix
home-manager switch --flake .#
hx flake.nix
home-manager switch --flake .#
hx flake.nix
home-manager switch --flake .#
ls
wezterm 
ls
z .config
ls
mkdir wezterm
cd wezterm/
ls
touch wezterm.lua
test
ls
=>
z nix
hx wezterm.lua
wezterm -c wezterm.lua
wezterm --help
wezterm --config wezterm.lua
wezterm start -h
wezterm start -- bash -l
hx wezterm.lua
wezterm start
ls
clear
ls
z kitty
ls
hx kitty
ls
clear
cargo r
setxkbmap -layout us -variant workman -option caps:swapescape
steam
z rust
setxkbmap -layout us -variant workman -option caps:swapescape
kitty +kitten themes
hx kitty.conf
kitty +kitten themes
ls
ks
ls
z rust
z StarConquer/
ls
ls assets/
ls src/
nixDevi
hx kitty.conf
hx wezterm.lua
ls
cd ..
rm -r wezterm/
ls
up
ls
hx
z kitty
ls
hx kitty.conf
kitty +kitten themes
ls
ssh
ls .ssh
cd
ls
ls .ssh
bat .ssh/known_hosts
ssh emi.u-bordeaux.fr@adagamar
ssh aderobertma@sshproxy.emi.u-bordeaux.fr
ssh-copy-id aderobertma@jaguar.emi.u-bordeaux.fr
ls
cd .ssh
ls
touch config
nv confit
ssh crem
ssh cremi
ssh -J cremi hb
ssh -J cremi hautbrion
ssh --help
man ssh
ssh cremi
touch environment
ssh cremi
env.$TERM
$env.TERM
ssh cremi
man sshconfig
man ssh-config
ssh cremi
ssh hb
ssh cremi
man ssh_config
ssh -J cremi dali
ssh -W '[dali.emi.u-bordeaux.fr]:22' cremissh -W 
ssh -W '[dali.emi.u-bordeaux.fr]:22' cremi
bash
ls
nv config
ls
ssh cremi
ssh -Y cremi
cd .ssh
nv config
ssh cremi
nv config
$env.TERM
ssh cremi
ssh -Y cremi
./Godot_v4.0-beta2_linux.x86_64
chmod +x Godot_v4.0-beta2_linux.x86_64
./Godot_v4.0-beta2_linux.x86_64
file:///home/adml/Documents/documents/Godot_v4.0-beta2_linux.x86_64
./Godot_v4.0-beta2_linux.x86_64
exec Godot_v4.0-beta2_linux.x86_64
ls
mv Godot_v4.0-beta2_linux.x86_64 godot4
./godot4
bash
cd Documents/documents/
ls
./godot4
exec godot4
exec ./godot4
bat godot4
ssh cremi
man ssh_config
ssh cremi
ssh cremi dali
ssh dali
ssh -W '[dali]:22' cremi
ssh dali
bash
ssh -W '[dali.emi.u-bordeaux.fr]:22' cremi
ssh dali
nc
nc -w
man nc
ssh -J cremi dali
ssh dali
cd .ssh
ls
ls .ssh
cd .ssh
ls
bat known_hosts
ls
bat environment
rm environment
ls
bat github
bat github.pub
ssh cremi
ls
ssh-keygen 
ls
ssh-keygen 
ls
mv cremi .ssh/.
mv cremi.pub .ssh/.
ssh cremi
ls
ssh-copy-id --help
man ssh-copy-id
ssh-copy-id -i cremi.pub aderobertma@jaguar.emi.u-bordeaux.fr
ssh cremi
rm cremi cremi.pub
ssh-ke
ssh-keygen 
ls
ssh cremi
ssh-copy-id -i cremi.pub aderobertma@jaguar.emi.u-bordeaux.fr
ssh dali
chmod 0600 cremi
ssh dali
chmod 0600 cremi.pub
ssh dali
ssh cremi
ls
ssh cremi
bat known_hosts
 ssh -v -J cremi dali
 ssh -vcc -J cremi dali
 ssh -vvv -J cremi dali
 ssh -vvv -J cremi dali -p 22
nv known_hosts
ssh dali
ssh -h
man ssh
ssh dali
nv config
ssh dali
ssh aderobertma@dali.emi.u-bordeaux.fr
telnet ssh.emi.u-bordeaux.fr 22
ssh dali
ssh cremi
ssh dali
ssh cremi
ssh cremi ssh dali
ssh cremi
ssh merlin
nv .ssh/config
z rust
ls
git clone git@github.com:AdrienDML/geors.git
cd geors
ls
nv Cargo.toml
cargo b
mv src/main.rs src/lib.rs
nv
bat flake.nix
nixDev
ls src/
cd src/
touch d2.rs
nv
nixDev
cargo watch
nv flake.nix
nv
nixDev
up
cd StarConquer/
ls
nv
nixDevi
z fac
ls
cd L3/
up
cd M1
ls
cd POOSM1/
ls
cd TD/
ls
gradle r
setxkbmap -layout us -variant workman -option caps:swapescape
nix Devi
ls
gradle r
ls
gradle r
gradle b
gradle r
bash
ls
cd app
ls
cd src/
ls
cd main
ls
cd java/
ls
cd TD/
ls
pwd
up $
up 4
ls
javac -d bin src/**/*.java
ls
rm src/test/ -r
javac -d bin src/**/*.java
ls
cd bin
ls
cd ..
java -cp bin
java -cp bin TD
java -cp bin TD.MyShop
javac -d bin src/**/*.java
java -cp bin TD.MyShop
ls
rm bin
rm -r bin
ls
rm build -r 
rm build.gradle
ls
up
ls
rm gradle -r 
rm gradlew
rm gradlew.bat
rm settings.gradle
ls
ls workspace/
rm workspace/
ls
rm -r workspace/
ls
nv
ls
nixDevi
nixDev
nv flake.nix
ls
touch MAKEFILE
man make
man gnumake
man gnumak
man makefile
make build
ls
man make
nv
mv MAKEFILE makefile
make run
ls
ls app
mv app/src/ .
ls
rm -r app
ls src/
cd src/
ls
mv main/java/TD/* .
ls
rm App.jaca
rm App.java
ls
make
make run
up
make run
make b
make r
ls
src/*.java
ls src/*.java
make r
make b
make 
make r
touch src/Cli.java
ls
mv src/MyShop.java src/Shop.java
nv makefile
nixDev
ssh cremi
ssh dali
cd .ssh
ks
ls
ssh dali
setxkbmap -layout us -variant workman -option caps:swapescape
nv config
up
ssh dali
ssh cremi ssh dali
setxkbmap -layout us -variant workman -option caps:swapescape
cd Documents/
ls
mkdir proot
ls
cd proot/
ls
touch proot.nix
nv proot.nix
scp
nix-build proot.nix
ls
up
scp nix-user-chroot-bin-1.2.2-aarch64-unknown-linux-musl cremi:~/espaces/travail/. 
ls Documents/
scp Downloads/nix-user-chroot-bin-1.2.2-x86_64-unknown-linux-musl cremi:~/espaces/travail/.
clear
ssh cremi
setxkbmap -layout us -variant workman -option caps:swapescape
ls
nvim
nvim --version
scp -r .config/nvim cremi:~/.config/.
ssh cremi
setxkbmap -layout us -variant workman -option caps:swapescape
ssh cremi
z geors
ls
up
z StarConquer/
ls
cargo m
cargo c
ssh cremi
z nix
ls
cd users/adml/main.kbd 
cd users/adml/ 
touch main.kbd
 up 2
cd modules/
ls
cd home/
ls
mkdir keyboard
touch keyboard/default.nix
,s
setxkbmap -layout us -variant workman -option caps:swapescape
ext
ls
z nix
ls
cd lib
ls
mkdir keyboard
touch keyboard/default.nix
ls
cd ..
nvim
rm ~/.config/nvim/init.vim
git status
git diff flake.nix
ls
cd ..
setxkbmap -layout us -variant workman -option caps:swapescape
lsmor
lsmod
lsmod | grep uinput
lsmod | rg uinput
modloaded
nv
setxkbmap -layout us -variant workman -option caps:swapescape
z dev
ls
touch nix
ls
cd nix/
ls
cd nnvim/
ls
gs
cd ..
rm nnvim/
rm nnvim/ -r
ls
git clone git@github.com:AdrienDML/NixNvim.git
ls
cd NixNvim/
ls
mkdir lib
nvim
mkcd lib
touch default.nix
setxkbmap -layout us -variant workman -option caps:swapescape
man fgets
ls
z Music/
z M1
,s
ls
cd SYS/
ls
cd TD/
ls
cd nachos/
ls
nvim
git status
cd ..
ls
cd nachos/
cd ..
rm -rf nachos/
git clone git@github.com:mickaelarv/os.git
cd os/
s
,s
ls
setxkbmap -layout us -variant workman -option caps:swapescape
htop
ls
cd ..
ls
mkdir config
touch config/default.nix
,s
ls config
cd config/
ls
touch keymap.nix
cd ..
ls
cd lib/
ls
touch keys.nix
ls
rm keys.nix
nvim
cd lib/
ls
touch lua.nix
up
ls
scp cremi:~/espaces/travail/M1/os/code.tgz .
ls
mv code.tgz Downloads/
ssh cremi
stem
steam
ox't<\n>oxoas'ht
z rust
cd StarConquer/
ls
nix fmt
cargo fmt
ls
cd src/
ls
cd game/
ls
mkdir scenes
ls
touch scenes/mod.rs
git
gs
cargo r
nvim
nvim
setxkbmap -layout us -variant workman -option caps:swapescape
up
ls
cd ext/
ls
mkmod input
ls
cd input/
s
ls
touch input_map.rs
ls
touch user_input.rs
touch axis.rs
touch button.rs
up 3
ls
cargo new --lib macros
ls
cd macros/
touch src/action_like.rs
rm src/action_like.rs
up
cd src/
ls
cd ext/
ls
rm -r input
cd camera/
ls
z rust
ls
git clone git@github.com:AdrienDML/leafwing-input-manager.git
cd leafwing-input-manager/
ls
cp ../StarConquer/*.nix .
ls
rm *.nix
ls
cargo run
ls
cd .config
z nix
ls
nixos-rebuild build --flake .#
ls
sudo nixos-rebuild switch --flake .#
ls
nvim
z nushell
ls
$nu
$nu.os-info
ls ..
ls ../git
cd ../git
ls
bat config
touch .gitignore
ls
la
nvim env.nu
cd ../git
ls
nvim
ls
z nix
home-manager build --flake .#
home-manager switch --flake .#
ls
z users/
s
ls
z adml/
ls
mkdir devshells
cd devshells
ls
mkdir rust
mkdir c
mkdir java
mkdir python
ls
cd rust
nix flake init
nvim
ls
cd users/adml/
ls
mkdir config
ls
cd config
ls
cp ~/.config/nvim/ -r .
s
ls
cp ~/.config/kitty -r .
ls
